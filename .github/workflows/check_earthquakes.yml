yml
name: Verificador de Sismos Fortes

on:
  workflow_dispatch:
  schedule:
    - cron: '*/15 * * * *'

permissions:
  contents: write

jobs:
  check_feed:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Instalar Google Cloud CLI e JQ
        run: |
          sudo apt-get update
          sudo apt-get install -y jq curl bc
          curl -sS https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-cli-418.0.0-linux-x86_64.tar.gz | tar xz
          ./google-cloud-sdk/install.sh --quiet
          source ./google-cloud-sdk/path.bash.inc
          echo '${{ secrets.FCM_SERVICE_ACCOUNT_JSON }}' > service-account.json
          ./google-cloud-sdk/bin/gcloud auth activate-service-account --key-file=service-account.json
          ./google-cloud-sdk/bin/gcloud config set project streamnewapp

      - name: Verificar API e Enviar Notificação de Sismo
        run: |
          API_URL="https://earthquake.usgs.gov/fdsnws/event/1/query?format=geojson&minmagnitude=5.0&starttime=$(date -u -d '2 hours ago' +'%Y-%m-%dT%H:%M:%S')&orderby=time"
          ACCESS_TOKEN=$(./google-cloud-sdk/bin/gcloud auth print-access-token)
          LAST_ID_FILE="last_quake_id.txt"
          if [ -f "$LAST_ID_FILE" ]; then
            LAST_ID=$(cat "$LAST_ID_FILE")
          else
            LAST_ID="initial"
          fi
          FEED_CONTENT=$(curl -s "$API_URL")
          if [ "$(echo "$FEED_CONTENT" | jq -e '.features | length')" -eq 0 ]; then
              echo "Nenhum sismo detectado no período."
              exit 0
          fi
          QUAKES=$(echo "$FEED_CONTENT" | jq -c '.features[]')
          FIRST_QUAKE_ID=$(echo "$QUAKES" | head -n 1 | jq -r '.id')
          echo "$QUAKES" | while read -r QUAKE; do
            CURRENT_ID=$(echo "$QUAKE" | jq -r '.id')
            
            # Sua lógica original e confiável que não envia spam
            if [ "$CURRENT_ID" == "$LAST_ID" ]; then
              echo "Nenhum sismo novo detectado. Parando."
              break
            fi
            MAGNITUDE=$(echo "$QUAKE" | jq -r '.properties.mag')
            if (( $(echo "$MAGNITUDE >= 5.0" | bc -l) )); then
              CURRENT_TITLE=$(echo "$QUAKE" | jq -r '.properties.title')
              echo "Sismo forte detectado: $CURRENT_TITLE"

              # ▼▼▼ JSON_BODY SIMPLES ENVIANDO TEXTO FIXO EM PORTUGUÊS ▼▼▼
              JSON_BODY=$(jq -n \
                --arg to "ALERTAS_SISMOS_FORTES" \
                --arg title "Sismo Significativo: $CURRENT_TITLE" \
                --arg body "Um sismo significativo foi detectado. Toque para mais detalhes." \
                '{
                  "message": {
                    "topic": $to,
                    "data": {
                      "title": $title,
                      "body": $body
                    }
                  }
                }')

              curl -X POST -H "Authorization: Bearer $ACCESS_TOKEN" -H "Content-Type: application/json" -d "$JSON_BODY" https://fcm.googleapis.com/v1/projects/streamnewapp/messages:send
              
              echo "Notificação enviada. Finalizando ciclo."
              break 
            else
              echo "Sismo novo ignorado (Mag: $MAGNITUDE), continuando a busca..."
            fi
          done

          if [ -n "$FIRST_QUAKE_ID" ] && [ "$FIRST_QUAKE_ID" != "$LAST_ID" ]; then
            echo "$FIRST_QUAKE_ID" > "$LAST_ID_FILE"
            git config --global user.name 'GitHub Actions'
            git config --global user.email 'actions@github.com'
            git add $LAST_ID_FILE
            git commit -m "Atualiza o ID do último sismo para ${FIRST_QUAKE_ID}"
            git push
          fi
