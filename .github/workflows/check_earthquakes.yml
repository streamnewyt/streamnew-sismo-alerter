name: Verificador de Sismos Fortes

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  check_feed:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Instalar Google Cloud CLI e JQ
        run: |
          sudo apt-get update
          sudo apt-get install -y jq curl

          # Baixa e instala o Google Cloud SDK
          curl -sS https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-cli-418.0.0-linux-x86_64.tar.gz | tar xz
          ./google-cloud-sdk/install.sh --quiet

          # Adiciona o SDK ao PATH
          source ./google-cloud-sdk/path.bash.inc

          # Salva o JSON da conta de serviço corretamente
          echo '${{ secrets.FCM_SERVICE_ACCOUNT_JSON }}' > service-account.json

          # Autentica com a conta de serviço
          ./google-cloud-sdk/bin/gcloud auth activate-service-account --key-file=service-account.json
          ./google-cloud-sdk/bin/gcloud config set project streamnewapp

      - name: Verificar API e Enviar Notificação de Sismo
        run: |
          API_URL="https://earthquake.usgs.gov/fdsnws/event/1/query?format=geojson&minmagnitude=2.5&starttime=$(date -u -d '2 hours ago' +'%Y-%m-%dT%H:%M:%S')&orderby=time"
          ACCESS_TOKEN=$(./google-cloud-sdk/bin/gcloud auth print-access-token)

          LAST_ID_FILE="last_quake_id.txt"
          if [ -f "$LAST_ID_FILE" ]; then
            LAST_ID=$(cat "$LAST_ID_FILE")
          else
            LAST_ID="initial"
          fi

          FEED_CONTENT=$(curl -s "$API_URL")

          if [ "$(echo "$FEED_CONTENT" | jq -e '.features | length')" -eq 0 ]; then
              echo "Nenhum sismo detectado no período."
              exit 0
          fi

          QUAKES=$(echo "$FEED_CONTENT" | jq -c '.features[]')
          FIRST_QUAKE_ID=$(echo "$QUAKES" | head -n 1 | jq -r '.id')

          echo "$QUAKES" | while read -r QUAKE; do
            CURRENT_ID=$(echo "$QUAKE" | jq -r '.id')
            CURRENT_TITLE=$(echo "$QUAKE" | jq -r '.properties.title')

            echo "Último ID processado: $LAST_ID"
            echo "ID do sismo atual: $CURRENT_ID"

            if [ "$CURRENT_ID" != "$LAST_ID" ]; then
              echo "Novo sismo detectado: $CURRENT_TITLE"

              JSON_BODY=$(jq -n \
                --arg to "ALERTAS_SISMOS_FORTES" \
                --arg title "Significant Earthquake: $CURRENT_TITLE" \
                --arg body "A significant earthquake has been detected. Tap to open StreamNew Monitor for details." \
                --arg sound "default" \
                --arg sismo_id "$CURRENT_ID" \
                --arg sismo_magnitude "$(echo "$QUAKE" | jq -r '.properties.mag')" \
                --arg sismo_place "$(echo "$QUAKE" | jq -r '.properties.place')" \
                --arg sismo_time "$(echo "$QUAKE" | jq -r '.properties.time')" \
                '{
                  "message": {
                    "topic": $to,
                    "notification": {
                      "title": $title,
                      "body": $body
                    },
                    "data": {
                      "id": $sismo_id,
                      "magnitude": $sismo_magnitude,
                      "place": $sismo_place,
                      "time": $sismo_time
                    }
                  }
                }')

              curl -X POST \
                -H "Authorization: Bearer $ACCESS_TOKEN" \
                -H "Content-Type: application/json" \
                -d "$JSON_BODY" \
                https://fcm.googleapis.com/v1/projects/streamnewapp/messages:send

            else
              echo "Nenhum sismo novo detectado."
              break
            fi
          done

          if [ -n "$FIRST_QUAKE_ID" ]; then
            echo "$FIRST_QUAKE_ID" > "$LAST_ID_FILE"
            git config --global user.name 'GitHub Actions'
            git config --global user.email 'actions@github.com'
            git add $LAST_ID_FILE
            git commit -m "Atualiza o ID do último sismo processado"
            git push
          fi
