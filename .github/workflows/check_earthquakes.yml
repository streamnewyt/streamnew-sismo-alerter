name: Verificador de Sismos Fortes

# Define quando o robô vai rodar
on:
  schedule:
    # Roda a cada 15 minutos
    - cron: '* * * * *'
  workflow_dispatch:

# ** ADICIONE ESTE BLOCO **
permissions:
  contents: write

jobs:
  check_feed:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Passo 1: Instala o jq para processar JSON de forma fácil e segura
      - name: Instalar JQ
        run: sudo apt-get update && sudo apt-get install -y jq

      # Passo 2: Roda o script principal (AGORA OTIMIZADO)
      - name: Verificar API e Enviar Notificação
        run: |
          # Define as variáveis importantes
          # AGORA USAMOS A API QUERY PARA UM FILTRO DE TEMPO MAIS PRECISO
          API_URL="https://earthquake.usgs.gov/fdsnws/event/1/query?format=geojson&minmagnitude=6.0&starttime=$(date -u -d '15 minutes ago' +'%Y-%m-%dT%H:%M:%S')&orderby=time"
          FCM_KEY="${{ secrets.FCM_SERVER_KEY }}"
          
          # Pega o ID do último sismo que notificamos
          LAST_ID_FILE="last_quake_id.txt"
          if [ -f "$LAST_ID_FILE" ]; then
            LAST_ID=$(cat "$LAST_ID_FILE")
          else
            # Define um ID inicial fictício se o arquivo não existir
            LAST_ID="initial"
          fi

          # Baixa o feed da API e usa 'jq' para parsear de forma segura
          FEED_CONTENT=$(curl -s "$API_URL")

          # Extrai todos os sismos em um array JSON usando 'jq'
          QUAKES=$(echo "$FEED_CONTENT" | jq -c '.features[]')

          # Itera sobre cada sismo do feed
          echo "$QUAKES" | while read -r QUAKE; do
            # Extrai o ID e o título de forma segura
            CURRENT_ID=$(echo "$QUAKE" | jq -r '.id')
            CURRENT_TITLE=$(echo "$QUAKE" | jq -r '.properties.title')

            echo "Último ID processado: $LAST_ID"
            echo "ID do sismo atual: $CURRENT_ID"

            # Se o ID atual for diferente do último, significa que é um sismo NOVO
            if [ "$CURRENT_ID" != "$LAST_ID" ]; then
              echo "Novo sismo detectado! Título: $CURRENT_TITLE"
              
              # Monta o corpo da notificação em JSON de forma segura
              JSON_BODY=$(jq -n \
                          --arg id "$CURRENT_ID" \
                          --arg title "$CURRENT_TITLE" \
                          --arg to "/topics/ALERTAS_SISMOS_FORTES" \
                          '{to: $to, notification: {title: "Significant Earthquake: \($title)", body: "A significant earthquake has been detected. Tap to open StreamNew Monitor for details.", sound: "default"}}')

              # Envia a notificação para o Firebase
              curl -X POST -H "Authorization: key=$FCM_KEY" -H "Content-Type: application/json" \
                   -d "$JSON_BODY" https://fcm.googleapis.com/fcm/send

              # E, mais importante, atualizamos o arquivo DEPOIS de enviar a notificação
              # para garantir que não enviamos de novo.
              echo "$CURRENT_ID" > "$LAST_ID_FILE"

              # Salva o novo ID de volta no repositório
              git config --global user.name 'GitHub Actions'
              git config --global user.email 'actions@github.com'
              git add $LAST_ID_FILE
              git commit -m "Atualiza o ID do último sismo processado"
              git push
            else
              echo "Nenhum sismo novo detectado."
              # Se o ID for o mesmo, saímos do loop para não notificar sismos mais antigos
              break
            fi
          done
